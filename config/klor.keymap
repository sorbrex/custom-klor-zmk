//                               █         █    █            ▄▄▄▀▀▀▀▀▀▄▄▄        █▀▀▀▀▀▀▀▀▀▀█
//                               █        █     █          ▄▀            ▀▄      █          █
//                               █       █      █        ▄▀                ▀▄    █          █
//                               █      █       █        █                  █    █          █
//                               █     █        █       █                    █   █          █
//                               █    █         █       █                    █   █▄▄▄▄▄▄▄▄▄▄█
//                               █   █ █        █       █                    █   █      █
//                               █  █   █       █        █                  █    █       █
//                               █ █     █      █        ▀▄                ▄▀    █        █
//                               ██       █     █          ▀▄            ▄▀      █         █
//                               █         █    █▄▄▄▄▄▄▄▄    ▀▀▀▄▄▄▄▄▄▀▀▀        █          █
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define ALPHA  0
#define SYMBOL 1
#define FUNC   2
#define ADJUST 3

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "ALPHA";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
        &kp Q  &kp W  &kp E      &kp R     &kp T                             &kp Y  &kp U      &kp I      &kp O    &kp P
&trans  &kp A  &kp S  &kp D      &kp F     &kp G                             &kp H  &kp J      &kp K      &kp L    &kp APOS  &trans
&trans  &kp Z  &kp X  &kp C      &kp V     &kp B       &trans     &trans     &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &kp LCTRL  &kp LGUI  &mo SYMBOL  &kp LSHFT  &kp ENTER  &mo 2  &kp SPACE  &kp BSPC
            >;
        };

        lower_layer {
            label = "SYMBOL";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
        &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT                           &kp CARET  &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                          &kp MINUS  &kp EQUAL      &kp COLON      &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans          &trans  &kp UNDER  &kp PLUS       &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                    &kp LCTRL     &kp LEFT_GUI  &trans        &kp LEFT_SHIFT  &mo 3   &kp ENTER  &kp SPACE      &kp BACKSPACE
            >;
        };

        raise_layer {
            label = "FUNC";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
        &kp ESC       &kp F1  &kp F2            &kp F11       &trans                             &trans  &kp PAGE_UP    &kp UP_ARROW    &kp HOME   &trans
&trans  &kp TAB       &trans  &trans            &trans        &trans                             &trans  &kp LEFT       &kp DOWN_ARROW  &kp RIGHT  &trans   &trans
&trans  &kp LEFT_ALT  &trans  &trans            &trans        &trans  &trans          &trans     &trans  &kp PAGE_DOWN  &trans          &kp END    &kp DEL  &trans
                              &kp LEFT_CONTROL  &kp LEFT_GUI  &mo 3   &kp LEFT_SHIFT  &kp ENTER  &trans  &kp SPACE      &kp BACKSPACE
            >;
        };

        adjust_layer {
            label = "ADJUST";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
        &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
